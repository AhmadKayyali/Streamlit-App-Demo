import streamlit as st
import streamlit.components.v1 as components
import streamlit.components.v1 as components
import plotly.express as px
import pandas as pd
import plotly.graph_objects as go
import networkx as nx
from snowflake.snowpark.context import get_active_session

# Write directly to the app
st.title("Example Streamlit App :rocket:")
st.write(
    """Demo app created by Ahmad Kayyali taken from Snowflake.
    """
)
# Sample data for co-authorship network
data = {
    'Words1': [
    "apple", "banana", "cherry", "date", "elderberry", "fig", "grape", 
    "honeydew", "kiwi", "lemon", "mango", "nectarine", "orange", 
    "papaya", "quince", "raspberry", "strawberry", "tangerine", 
    "ugli", "vanilla", "watermelon", "xigua", "yam", "zucchini", 
    "apricot", "blackberry", "cantaloupe", "dragonfruit", "elderflower", "feijoa", "king"
],
    'Words2': [
    "ant", "bee", "cat", "dog", "elephant", "fox", "goat", 
    "hippo", "iguana", "jaguar", "kangaroo", "lemur", "monkey", 
    "newt", "octopus", "penguin", "quail", "rabbit", 
    "snake", "turtle", "urchin", "vulture", "wolf", "xerus", 
    "yak", "zebra", "alpaca", "buffalo", "chinchilla", "dolphin", "queen"
]
}

# Create a DataFrame
df = pd.DataFrame(data)

# Create a NetworkX graph
G = nx.Graph()

# Add edges to the graph
for _, row in df.iterrows():
    G.add_edge(row['Words1'], row['Words2'])

# Get positions for the nodes
pos = nx.spring_layout(G)

# Create edges
edge_x = []
edge_y = []
for edge in G.edges():
    x0, y0 = pos[edge[0]]
    x1, y1 = pos[edge[1]]
    edge_x.extend([x0, x1, None])
    edge_y.extend([y0, y1, None])

edge_trace = go.Scatter(
    x=edge_x,
    y=edge_y,
    line=dict(width=1, color='#888'),
    hoverinfo='none',
    mode='lines'
)

# Create nodes
node_x = []
node_y = []
node_text = []
for node in G.nodes():
    x, y = pos[node]
    node_x.append(x)
    node_y.append(y)
    node_text.append(node)

node_trace = go.Scatter(
    x=node_x,
    y=node_y,
    text=node_text,
    mode='markers+text',
    hoverinfo='text',
    marker=dict(
        showscale=True,
        colorscale='YlGnBu',
        size=10,
        colorbar=dict(
            thickness=15,
            title='Node Connections',
            xanchor='left',
            titleside='right'
        )
    )
)

# Create figure
fig = go.Figure(data=[edge_trace, node_trace],
                layout=go.Layout(
                    title='Demo Network',
                    titlefont_size=16,
                    showlegend=False,
                    hovermode='closest',
                    margin=dict(b=20, l=5, r=5, t=40),
                    xaxis=dict(showgrid=False, zeroline=False),
                    yaxis=dict(showgrid=False, zeroline=False)
                ))

# Display in Streamlit
st.title("Bibliometric Network Visualisation")
st.plotly_chart(fig)

# Get the current credentials
session = get_active_session()
